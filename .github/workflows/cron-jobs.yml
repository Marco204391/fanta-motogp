name: FantaMotoGP Cron Jobs

on:
  schedule:
    - cron: '0 4 * * 2'        # Marted√¨ 04:00 - Sync piloti e calendario
    - cron: '0 23 * * 5'       # Venerd√¨ 23:00 - Una volta a fine giornata
    - cron: '*/40 * * * 6'     # Sabato ogni 40 minuti
    - cron: '*/40 * * * 0'     # Domenica ogni 40 minuti
    - cron: '0 9 * * 1'        # Luned√¨ 09:00 - Calcolo punteggi finale
  workflow_dispatch:

jobs:
  # JOB 1: SYNC SETTIMANALE (sempre attivo, non dipende da race weekend)
  sync_base_data:
    name: 1. Sync Base Data (Weekly)
    runs-on: ubuntu-latest
    if: github.event.schedule == '0 4 * * 2' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Trigger Riders & Calendar Sync
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
        run: |
          curl --fail -X GET "https://fanta-motogp.vercel.app/api/sync/cron/sync-riders" -H "Authorization: Bearer $CRON_SECRET"
          curl --fail -X GET "https://fanta-motogp.vercel.app/api/sync/cron/sync-calendar" -H "Authorization: Bearer $CRON_SECRET"

  # JOB 2: CHECK RACE WEEKEND (determina se procedere con i sync)
  check_race_weekend:
    name: 2a. Check if Race Weekend
    runs-on: ubuntu-latest
    if: |
      github.event.schedule == '0 23 * * 5' || 
      github.event.schedule == '*/40 * * * 6' || 
      github.event.schedule == '*/40 * * * 0' || 
      github.event.schedule == '0 9 * * 1' ||
      github.event_name == 'workflow_dispatch'
    outputs:
      is_race_weekend: ${{ steps.check.outputs.IS_RACE_WEEKEND }}
      race_id: ${{ steps.check.outputs.RACE_ID }}
    steps:
      - name: Check for race this weekend
        id: check
        run: |
          response=$(curl --fail -s "https://fanta-motogp.vercel.app/api/races/is-race-weekend")
          IS_RACE_WEEKEND=$(echo "$response" | jq -r '.isRaceWeekend')
          RACE_ID=$(echo "$response" | jq -r '.raceId // ""')
          
          echo "IS_RACE_WEEKEND=$IS_RACE_WEEKEND" >> $GITHUB_OUTPUT
          echo "RACE_ID=$RACE_ID" >> $GITHUB_OUTPUT
          
          if [ "$IS_RACE_WEEKEND" == "true" ]; then
            echo "‚úÖ Weekend di gara rilevato - Race ID: $RACE_ID"
          else
            echo "üèñÔ∏è  Nessuna gara questo weekend - Sync sessions skipped"
          fi

  # JOB 3: SYNC SESSIONS (solo se c'√® una gara questo weekend)
  sync_sessions:
    name: 2b. Sync ${{ matrix.category }} - ${{ matrix.session }}
    runs-on: ubuntu-latest
    needs: check_race_weekend
    if: |
      needs.check_race_weekend.outputs.is_race_weekend == 'true' && 
      needs.check_race_weekend.outputs.race_id != ''
    strategy:
      fail-fast: false
      matrix:
        category: [MOTOGP, MOTO2, MOTO3]
        session: [FP1, PR, FP2, QUALIFYING, SPRINT, RACE]
        exclude:
          - { category: MOTO2, session: SPRINT }
          - { category: MOTO3, session: SPRINT }
          
    steps:
      - name: Trigger scoped session sync
        continue-on-error: true
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          RACE_ID: ${{ needs.check_race_weekend.outputs.race_id }}
        run: |
          API_URL="https://fanta-motogp.vercel.app/api/sync/cron/scoped/$RACE_ID?category=${{ matrix.category }}&session=${{ matrix.session }}"
          curl --fail -X GET "$API_URL" -H "Authorization: Bearer $CRON_SECRET"

  # JOB 4: CALCOLA I PUNTEGGI FINALI (solo se c'√® stata una gara)
  calculate_scores:
    name: 3. Calculate Final Scores (Monday)
    runs-on: ubuntu-latest
    needs: check_race_weekend
    if: |
      github.event.schedule == '0 9 * * 1' && 
      needs.check_race_weekend.outputs.is_race_weekend == 'true' &&
      needs.check_race_weekend.outputs.race_id != ''
    steps:
      - name: Trigger score calculation
        env:
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          RACE_ID: ${{ needs.check_race_weekend.outputs.race_id }}
        run: |
          API_URL="https://fanta-motogp.vercel.app/api/sync/cron/calculate-scores/$RACE_ID"
          curl --fail -X POST "$API_URL" -H "Authorization: Bearer $CRON_SECRET" -H "Content-Length: 0"